name: 'High-Signal PR Code Review'

on:
  issue_comment:
    types: [created]

jobs:
  pr-code-review:
    name: 'Automated Code Review with Inline Comments'
    runs-on: ubuntu-latest
    
    # Only run when comment contains /code_review on a pull request
    if: >
      (github.event_name == 'issue_comment' && 
       github.event.issue.pull_request &&
       contains(github.event.comment.body, '/code_review'))
    
    permissions:
      contents: read
      pull-requests: write
      issues: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better context analysis

      - name: Set PR context variables
        id: pr-context
        run: |
          echo "pr_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          echo "trigger_type=manual" >> $GITHUB_OUTPUT
          echo "repo_owner=${{ github.repository_owner }}" >> $GITHUB_OUTPUT
          echo "repo_name=${{ github.event.repository.name }}" >> $GITHUB_OUTPUT

      - name: Run High-Signal Code Review
        uses: ./.github/actions/qodo-code-review
        with:
          prompt: |
            Perform a high-signal automated code review with inline comments.
            
            **Repository**: ${{ steps.pr-context.outputs.repo_owner }}/${{ steps.pr-context.outputs.repo_name }}
            **PR Number**: ${{ steps.pr-context.outputs.pr_number }}
            **Trigger**: ${{ steps.pr-context.outputs.trigger_type }}
            
            **Instructions**:
            1. Fetch PR details and analyze ONLY the changed lines
            2. Use full repository context to understand impact and avoid false positives
            3. Focus on critical issues: security vulnerabilities, performance problems, logic errors, architecture violations
            4. Apply medium severity threshold - only flag issues that matter
            5. Create specific, actionable inline comments with code examples
            6. Maintain high signal-to-noise ratio - quality over quantity
            
            **Process**:
            - Get PR diff and identify changed lines
            - Analyze repository context for patterns and dependencies  
            - Review changed code for high-impact issues
            - Create GitHub review with inline comments
            - Submit as COMMENT type review
            
            **Output**: GitHub PR review with inline comments on problematic lines
          
          agent-file: 'agents/pr-high-signal-reviewer.toml'
          model: 'gpt-4'
          key-value-pairs: |
            pr_number=${{ steps.pr-context.outputs.pr_number }}
            repo_owner=${{ steps.pr-context.outputs.repo_owner }}
            repo_name=${{ steps.pr-context.outputs.repo_name }}
            severity_threshold=medium
            focus_areas=security,performance,bugs,architecture
            review_scope=changed_lines_only
            use_repository_context=true
            signal_to_noise_priority=high
            comment_type=inline_with_examples

  # Fallback job for error handling and notifications
  review-status:
    name: 'Review Status Update'
    runs-on: ubuntu-latest
    needs: pr-code-review
    if: always()
    
    permissions:
      pull-requests: write
      issues: write
    
    steps:
      - name: Update PR with review status
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ github.event.issue.number }};
            const reviewSuccess = '${{ needs.pr-code-review.result }}' === 'success';
            
            if (reviewSuccess) {
              console.log('‚úÖ High-signal code review completed successfully');
            } else {
              // Post a comment about the review failure
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: |
                  ü§ñ **Automated Code Review Status**
                  
                  ‚ùå The automated code review encountered an issue and could not complete.

                  **Possible causes:**
                  - API rate limits
                  - Network connectivity issues  
                  - Large PR size exceeding analysis limits
                  - Repository access permissions

                  **Next steps:**
                  - Check the [workflow logs](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details
                  - Try triggering manually with \`/code_review\` comment
                  - Contact maintainers if the issue persists

                  The review will be retried automatically on the next PR update.
              });
            }

  # Optional: Summary job for analytics and metrics
  review-metrics:
    name: 'Review Metrics Collection'
    runs-on: ubuntu-latest
    needs: pr-code-review
    if: success()
    
    steps:
      - name: Collect review metrics
        run: |
          echo "üìä Review Metrics:"
          echo "- PR Number: ${{ github.event.issue.number }}"
          echo "- Repository: ${{ github.repository }}"
          echo "- Trigger: ${{ github.event_name }}"
          echo "- Timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          echo "- Workflow Run: ${{ github.run_id }}"
          
          # Future: Could send metrics to analytics service
          # curl -X POST "https://analytics.example.com/code-review-metrics" \
          #   -H "Content-Type: application/json" \
          #   -d '{"pr": "${{ github.event.pull_request.number }}", "repo": "${{ github.repository }}", "success": true}'